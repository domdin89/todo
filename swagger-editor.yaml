openapi: 3.0.3
info:
  title: Falone API
  description: Documentazione falone api v1.
  version: 1.0.0
servers:
  - url: https://falone.falone.madstudio.it
  - url: http://127.0.0.1:8000
paths: 
  /login:
    post:
      tags:
        - Authentication
      summary: Login and obtain JWT tokens
      description: Obtain JWT access and refresh tokens by providing login credentials.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: yourpassword
              required:
                - username
                - password
      responses:
        '200':
          description: Access and refresh tokens generated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh:
                    type: string
                    example: <refresh_token>
                  access:
                    type: string
                    example: <access_token>
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'No active account found with the given credentials'
  /login/refresh/:
     post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Use the refresh token to obtain a new access token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
                  description: The refresh token.
                  example: <refresh_token>
              required:
                - refresh
      responses:
        '200':
          description: A new access token was successfully generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                    description: The new access token.
                    example: <new_access_token>
                  refresh:
                    type: string
                    description: The new refresh token.
                    example: <new_refresh_token>
        '401':
          description: Unauthorized - Invalid refresh token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Token is invalid or expired'
  /worksites:
    get:
      tags:
        - Worksites
      summary: Ottiene tutti i cantieri del pannello admin
      description: Restituisce tutti i worksites.
      parameters:
        - in: query
          name: status
          description: 'Filtra i cantieri in base allo status. Valori ammessi: 0 per tutti i cantieri, 1 per i cantieri con status in corso, 2 per i cantieri con status chiuso.'
          required: true
          schema:
            type: integer
            enum:
              - 0
              - 1
              - 2
        - in: query
          name: page
          description: 'Numero di pagina, default 1.'
          required: false
          schema:
            type: integer
        - in: query
          name: page_size
          description: 'Numero di elementi per pagina, default 20.'
          schema:
            type: integer
          required: false
        - in: query
          name: search
          schema:
            type: string
          description: Ricerca i cantieri per nome, indirizzo o tipo.
          required: false
        - in: query
          name: category
          schema:
            type: integer
          description: Filtra i cantieri in base al tipo.
          required: false
      responses:
        '200':
          description: Lista dei cantieri restituita con successo. Se nessun cantiere corrisponde ai criteri di ricerca, viene restituito un array vuoto.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 100
                  next:
                    type: string
                    nullable: true
                    example: 'https://be.falone.madstudio.it/api/worksites?page=2&status=1'
                  previous:
                    type: string
                    nullable: true
                    example: null
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Worksites'
        '400':
          description: Parametro mancante o non valido
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Parametro 'status' mancante o non valido."
      security:
        - bearerAuth: []
    post:
      tags:
        - Worksites
      summary: Create a new worksite with foglio particella
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                name:
                  type: string
                address:
                  type: string
                lat:
                  type: number
                  format: float
                lon:
                  type: number
                  format: float
                is_visible:
                  type: boolean
                net_worth:
                  type: number
                  format: float
                percentage_worth:
                  type: number
                  format: float
                financier:
                  type: integer
                contractor:
                  type: integer
                link:
                  type: string
                date_start:
                  type: string
                  format: date-time
                date_end:
                  type: string
                  format: date-time
                status:
                  type: string
                  enum:
                    - APERTO
                    - SOSPESO
                    - CHIUSA
                codice_commessa:
                  type: string
                codice_CIG:
                  type: string
                codice_CUP:
                  type: string
                foglio_particelle:
                  type: array
                  items:
                    type: object
                    properties:
                      foglio:
                        type: integer
                      particella:
                        type: integer
      responses:
        '201':
          description: Successfully created a new worksite
        '400':
          description: Bad request, check the request body for errors
      security:
        - bearerAuth: []
  /worksite/new:
    post:
      tags:
        - Worksites
      summary: Crea un nuovo cantiere con foglio particella
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                name:
                  type: string
                address:
                  type: string
                lat:
                  type: number
                  format: float
                lon:
                  type: number
                  format: float
                is_visible:
                  type: boolean
                net_worth:
                  type: number
                  format: float
                percentage_worth:
                  type: number
                  format: float
                financier:
                  type: integer
                contractor:
                  type: integer
                link:
                  type: string
                date_start:
                  type: string
                  format: date-time
                date_end:
                  type: string
                  format: date-time
                status:
                  type: string
                  enum:
                    - APERTO
                    - SOSPESO
                    - CHIUSA
                codice_commessa:
                  type: string
                codice_CIG:
                  type: string
                codice_CUP:
                  type: string
                foglio_particelle:
                  type: array
                  items:
                    type: object
                    properties:
                      foglio:
                        type: integer
                      particella:
                        type: integer
      responses:
        '200':
          description: tutto regolare
        '400':
          description: Bad request, check the request body for errors
      security:
        - bearerAuth: []
  /worksites/{id}:
    get:
      tags:
        - Worksites
      summary: Retrieve a single worksite by ID
      description: Returns details of a single worksite specified by its ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the worksite to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved worksite details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksites'
        '404':
          description: Worksites not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Worksite not found.'
      security:
        - bearerAuth: []
  /worksites/update/{id}:
    put:
      tags:
        - Worksites
      summary: Aggiorna un cantiere esistente
      description: Aggiorna i dettagli di un cantiere esistente specificato dall'ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del cantiere da aggiornare
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorksitesNoImage'
      responses:
        '200':
          description: Cantiere aggiornato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksites'
        '404':
          description: Cantiere non trovato
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Cantiere non trovato.'
      security:
        - bearerAuth: []
  /worksites/update/foglio-particella/{id}:
    parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del foglio particella da aggiornare
    put:
      tags:
        - Worksites
      summary: Crea un nuovo cantiere con foglio particella
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foglio_particelle:
                  type: array
                  items:
                    type: object
                    properties:
                      foglio:
                        type: string
                      particella:
                        type: string
      responses:
        '200':
          description: tutto regolare
        '400':
          description: Bad request, check the request body for errors
      security:
        - bearerAuth: []
  /worksites/update/category/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID della categoria da aggiornare
    put:
      tags:
        - Worksites
      summary: Aggiorna una categoria di un cantiere
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                categories:  # Fixing property name
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
      responses:
        '200':
          description: Categoria aggiornata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksites'
        '404':
          description: Categoria non trovata
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Categoria non trovata.'
      security:
        - bearerAuth: []
  /worksites/delete/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID del worksite da rimuovere
    delete:
      tags:
        - Worksites
      summary: Elimina un worksite
      responses:
        '200':
          description: Worksite eliminato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksites'
        '404':
          description: Categoria non trovata
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Foglio particella non trovata.'
      security:
        - bearerAuth: []
  /worksites/delete/foglio-particella/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID del foglio-particella da rimuovere
    delete:
      tags:
        - Worksites
      summary: Elimina un foglio particella
      responses:
        '200':
          description: Foglio Particella eliminata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksites'
        '404':
          description: Categoria non trovata
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Foglio particella non trovata.'
      security:
        - bearerAuth: []
  /worksites/delete/category/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID del worksite-category da rimuovere
    delete:
      tags:
        - Worksites
      summary: Elimina una categoria dal worksite
      responses:
        '200':
          description: Categoria eliminata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worksites'
        '404':
          description: Categoria non trovata
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Foglio particella non trovata.'
      security:
        - bearerAuth: []
  /profile:
    get:
      tags:
        - Profile
      summary: Recupera i collaboratori dei cantieri
      description: Ottieni l'elenco dei Professionisti, opzionalmente filtrato per un cantiere specifico o termine di ricerca.
      parameters:
        - in: query
          name: type
          description: 'Filtra i profile in base al type.'
          required: false
          schema:
            type: string
            enum:
              - "USER"
              - "STAFF"
              - "TECNICI"
        - in: query
          name: search
          schema:
            type: string
          description: Termine di ricerca per filtrare le collaborazioni.
          required: false
        - in: query
          name: page
          schema:
            type: integer
          description: Numero di pagina per la paginazione.
          required: false
        - in: query
          name: page_size
          schema:
            type: integer
          description: Numero di elementi per pagina per la paginazione.
          required: false
      responses:
        '200':
          description: Un elenco di Professionisti.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 100
                  next:
                    type: string
                    example: 'https://be.falone.madstudio.it/api/collaborators?page=2'
                  previous:
                    type: string
                    example: null
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
        '400':
          description: Parametro di query non valido
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Parametro di query non valido."
      security:
        - bearerAuth: []
    post:
      tags:
        - Profile
      summary: Aggiungi un nuovo profilo
      description: "Aggiungi un nuovo profilo"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
               - first_name
               - last_name
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                mobile_number:
                  type: string
                email:
                  type: string
                type:
                  type: string
                  enum:
                    - "USER"
                    - "STAFF"
                    - "TECNICI"
                image:
                  type: string
                  format: binary
                  description: Image file of the worksite
      responses:
        '201':
          description: Nuovo collaboratore aggiunti con successo al cantiere.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollabWorksites'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "I campi di inuput forniti non sono validi."
      security:
        - bearerAuth: []
  /profile/{id}:
    put:
      tags:
        - Profile
      summary: Aggiorna un profilo esistente
      description: Aggiorna i dettagli di un profilo utente esistente specificato dall'ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del profilo da aggiornare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: Profilo aggiornato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: Profilo non trovato
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Profilo non trovato.'
      security:
        - bearerAuth: []
  /collabworksites:
    get:
      tags:
        - CollabWorksites
      summary: Recupera i collaboratori dei cantieri
      description: Ottieni l'elenco dei Professionisti, opzionalmente filtrato per un cantiere specifico o termine di ricerca.
      parameters:
        - in: query
          name: worksite
          schema:
            type: integer
          description: ID del cantiere per filtrare le collaborazioni.
          required: false
        - in: query
          name: search
          schema:
            type: string
          description: Termine di ricerca per filtrare le collaborazioni.
          required: false
        - in: query
          name: page
          schema:
            type: integer
          description: Numero di pagina per la paginazione.
          required: false
        - in: query
          name: page_size
          schema:
            type: integer
          description: Numero di elementi per pagina per la paginazione.
          required: false
      responses:
        '200':
          description: Un elenco di Professionisti.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 100
                  next:
                    type: string
                    example: 'https://be.falone.madstudio.it/api/collabworksites?page=2'
                  previous:
                    type: string
                    example: null
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CollabWorksites'
        '400':
          description: Parametro di query non valido
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Parametro di query non valido."

      security:
        - bearerAuth: []
  /collabworksite/new:
    post:
      tags:
        - CollabWorksites
      summary: Aggiungi un nuovo collaboratore ad un cantiere
      description: "Aggiungi un nuovo collaboratore (gia esistente) ad un cantiere"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: integer
                  example: 1
                worksite:
                  type: integer
                  example: 1
                roles:  # Fixing property name
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                      order:
                        type: integer
      responses:
        '201':
          description: Nuovo collaboratore aggiunti con successo al cantiere.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollabWorksites'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "I campi di inuput forniti non sono validi."
      security:
        - bearerAuth: []
  /collabworksite/update:
    put:
      tags:
        - CollabWorksites
      summary: Aggiungi un nuovo collaboratore ad un cantiere
      description: "Aggiungi un nuovo collaboratore (gia esistente) ad un cantiere"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: integer
                  example: 1
                worksite:
                  type: integer
                  example: 1
                roles:  # Fixing property name
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                      order:
                        type: integer
      responses:
        '201':
          description: Nuovo collaboratore aggiunti con successo al cantiere.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollabWorksites'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "I campi di inuput forniti non sono validi."
      security:
        - bearerAuth: []
  /collabworksites/{id}:
    put:
      tags:
        - CollabWorksites
      summary: Aggiorna un collaboratore di cantiere esistente
      description: Aggiorna i dettagli di un collaboratore di cantiere esistente specificato dall'ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del collaboratore di cantiere da aggiornare
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollabWorksites'
      responses:
        '200':
          description: Collaboratore di cantiere aggiornato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollabWorksites'
        '404':
          description: Collaboratore di cantiere non trovato
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Collaboratore di cantiere non trovato.'
      security:
        - bearerAuth: []
  /collabworksites/delete/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID del collaboratore da rimuovere
    delete:
      tags:
        - CollabWorksites
      summary: Elimina un collaboratore
      responses:
        '200':
          description: collaboratore eliminato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollabWorksites'
        '404':
          description: collaboratore non trovato
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'collaboratore non trovato.'
      security:
        - bearerAuth: []
  /worksitesprofile:
    get:
      tags:
        - WorksitesProfile
      summary: Ottiene tutti i profili dei cantieri con paginazione opzionale
      description: Restituisce tutti i profili associati ai cantieri, con l'opzione di paginare i risultati.
      parameters:
        - in: query
          name: worksite
          description: 'id del cantiere'
          required: true
          schema:
            type: integer
        - in: query
          name: role
          description: 'id del cantiere'
          required: true
          schema:
            type: string
            enum:
              - USER
              - TECNICI
              - STAFF
        - in: query
          name: page
          description: 'Numero della pagina per la paginazione, il valore di default è 1.'
          required: false
          schema:
            type: integer
        - in: query
          name: page_size
          description: 'Numero di elementi per pagina per la paginazione, il valore di default è 20.'
          required: false
          schema:
            type: integer
        - in: query
          name: search
          description: Ricerca profili dei cantieri per nome, indirizzo o altre caratteristiche.
          required: false
          schema:
            type: string

      responses:
        '200':
          description: Elenco dei profili dei cantieri restituito con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 100
                  next:
                    type: string
                    nullable: true
                    example: 'https://be.falone.madstudio.it/api/worksitesprofile?page=2'
                  previous:
                    type: string
                    nullable: true
                    example: null
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorksitesProfile'
        '400':
          description: Parametro di query non valido o mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Parametro di query non valido o mancante."
      security:
        - bearerAuth: []
  /worksitesprofile_user:
    get:
      tags:
        - WorksitesProfile
      summary: Ottiene tutti i profili dei cantieri con paginazione opzionale
      description: Restituisce tutti i profili associati ai cantieri, con l'opzione di paginare i risultati.
      parameters:
        - in: query
          name: worksite
          description: 'id del cantiere'
          required: true
          schema:
            type: integer
        - in: query
          name: page
          description: 'Numero della pagina per la paginazione, il valore di default è 1.'
          required: false
          schema:
            type: integer
        - in: query
          name: page_size
          description: 'Numero di elementi per pagina per la paginazione, il valore di default è 20.'
          required: false
          schema:
            type: integer
        - in: query
          name: search
          description: Ricerca profili dei cantieri per nome, indirizzo o altre caratteristiche.
          required: false
          schema:
            type: string

      responses:
        '200':
          description: Elenco dei profili dei cantieri restituito con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 100
                  next:
                    type: string
                    nullable: true
                    example: 'https://be.falone.madstudio.it/api/worksitesprofile?page=2'
                  previous:
                    type: string
                    nullable: true
                    example: null
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorksitesProfile'
        '400':
          description: Parametro di query non valido o mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Parametro di query non valido o mancante."
      security:
        - bearerAuth: []
  /apartments:
    get:
      tags:
        - Apartments
      summary: Retrieve all apartments
      description: Returns all apartments with optional filtering and pagination.
      parameters:
        - in: query
          name: page
          description: Page number for pagination, default is 1.
          required: false
          schema:
            type: integer
        - in: query
          name: page_size
          description: Number of items per page for pagination, default is 20.
          required: false
          schema:
            type: integer
        - in: query
          name: search
          description: Search apartments by address, owner or other characteristics.
          required: false
          schema:
            type: string
        - in: query
          name: worksite
          description: Filter apartments by associated worksite.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned list of apartments. If no apartments match the filter criteria, an empty array is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 100
                  next:
                    type: string
                    nullable: true
                    example: 'https://api.falone.example.com/apartments?page=2'
                  previous:
                    type: string
                    nullable: true
                    example: null
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Apartments'
        '400':
          description: Invalid or missing query parameter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid or missing query parameter."
      security:
        - bearerAuth: []
  /apartment/new:
    post:
      tags:
        - Apartments
      summary: Aggiungi un nuovo collaboratore ad un cantiere
      description: "Aggiungi un nuovo collaboratore (gia esistente) ad un cantiere"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                floor:
                  type: string
                  example: 1
                owner:
                  type: string
                  example: Pippo
                owner_phone:
                  type: string
                  example: 32145678
                owner_email:
                  type: string
                  example: ciao@gmail.com
                owner_cf:
                  type: string
                  example: PDPDOPDFOSDNF
                note:
                  type: string
                  example: Negozio
                worksite:
                  type: integer
                  example: 1
                subs:  # Fixing property name
                  type: array
                  items:
                    type: object
                    properties:
                      foglio_particella:
                        type: integer
                        example: 1
                      sub:
                        type: string
                        example: 1
                      apartment:
                        type: integer
                        example: 2
      responses:
        '201':
          description: Nuovo collaboratore aggiunti con successo al cantiere.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apartments'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "I campi di inuput forniti non sono validi."
      security:
        - bearerAuth: []
  /apartments/update/{id}:
    put:
      tags:
        - Apartments
      summary: Aggiorna un appartamento esistente
      description: Aggiorna i dettagli di un cantiere esistente specificato dall'ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID dell'appartamento da aggiornare
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Apartments'
      responses:
        '200':
          description: Appartamento aggiornato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apartments'
        '404':
          description: Cantiere non trovato
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Appartamento non trovato.'
      security:
        - bearerAuth: []
  /apartments/delete/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: ID dell'appartamento da rimuovere
    delete:
      tags:
        - Apartments
      summary: Elimina un appartmento
      responses:
        '200':
          description: Appartamento eliminato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apartments'
        '404':
          description: Appartamento non trovata
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: 'Appartamento non trovato.'
      security:
        - bearerAuth: []
  /clientapartments:
    get:
      tags:
        - ClientApartments
      summary: Ottiene tutti gli appartamenti dei clienti con paginazione opzionale
      description: Restituisce tutti gli appartamenti associati ai clienti, con l'opzione di paginare i risultati.
      parameters:
        - in: query
          name: page
          description: 'Numero della pagina per la paginazione, il valore di default è 1.'
          required: false
          schema:
            type: integer
        - in: query
          name: page_size
          description: 'Numero di elementi per pagina per la paginazione, il valore di default è 20.'
          required: false
          schema:
            type: integer
        - in: query
          name: search
          description: Ricerca appartamenti dei clienti per indirizzo, proprietario o altre caratteristiche.
          required: false
          schema:
            type: string
        - in: query
          name: worksite
          description: Ricerca appartamenti dei clienti per cantiere.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Elenco degli appartamenti dei clienti restituito con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 100
                  next:
                    type: string
                    nullable: true
                    example: 'https://be.falone.madstudio.it/api/clientapartments?page=2'
                  previous:
                    type: string
                    nullable: true
                    example: null
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ClientApartments'
        '400':
          description: Parametro di query non valido o mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Parametro di query non valido o mancante."
      security:
        - bearerAuth: []
  /boards:
    get:
      tags:
        - Boards
      summary: Ottieni tutte le voci della bacheca con paginazione opzionale e filtro per tipo
      description: Restituisce tutte le voci della bacheca, con opzioni per paginare i risultati e filtrare per tipo.
      parameters:
        - in: query
          name: page
          description: 'Numero della pagina per la paginazione, il valore di default è 1.'
          required: false
          schema:
            type: integer
        - in: query
          name: page_size
          description: 'Numero di voci per pagina per la paginazione, il valore di default è 20.'
          required: false
          schema:
            type: integer
        - in: query
          name: search
          description: Cerca nelle voci della bacheca per titolo, autore o altre caratteristiche.
          required: false
          schema:
            type: string
        - in: query
          name: type
          description: Filtra le voci della bacheca per tipo. Ad esempio, MESSAGGIO, AGGIORNAMENTO, ecc.
          required: false
          schema:
            type: string
            enum: ['MESSAGE', 'UPDATE'] # Aggiungi altri tipi applicabili
        - in: query
          name: order
          description: Ordina le voci della bacheca in modo crescente o decrescente.
          required: false
          schema:
            type: string
            enum: ['asc', 'desc'] # Aggiungi altri tipi applicabili
        - in: query
          name: order_by
          description: Ordina risultati per input (nome etc)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Elenco delle voci della bacheca restituito con successo. Se nessuna voce corrisponde ai criteri di ricerca e filtro, viene restituito un array vuoto.
          content:
            application/json:
              schema:
                type: object
                properties:
                  conteggio:
                    type: integer
                    example: 100
                  successivo:
                    type: string
                    nullable: true
                    example: 'https://be.falone.madstudio.it/api/boards?pagina=2'
                  precedente:
                    type: string
                    nullable: true
                    example: null
                  risultati:
                    type: array
                    items:
                      $ref: '#/components/schemas/Boards'
        '400':
          description: Parametro di query non valido o mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  errore:
                    type: string
                    example: "Parametro di query non valido o mancante."
      security:
        - bearerAuth: []
    post:
      tags:
        - Boards
      summary: Crea una nuova voce nella bacheca
      description: Crea una nuova voce nella bacheca con i dati forniti.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boards'
      responses:
        '201':
          description: Voce della bacheca creata con successo.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boards'
        '400':
          description: Dati non validi forniti nella richiesta
          content:
            application/json:
              schema:
                type: object
                properties:
                  errore:
                    type: string
                    example: "Dati non validi forniti."
      security:
        - bearerAuth: []
  /boards-worksite:
    get:
      tags:
        - Boards
      summary: Ottiene tutti i board associati ad un worksite
      description: Restituisce tutti i tutti i board associati ad un worksite, con l'opzione di paginare i risultati.
      parameters:
        - in: query
          name: worksite
          description: 'id del worksite'
          required: true
          schema:
            type: integer
        - in: query
          name: page
          description: 'Numero della pagina per la paginazione, il valore di default è 1.'
          required: false
          schema:
            type: integer
        - in: query
          name: page_size
          description: 'Numero di elementi per pagina per la paginazione, il valore di default è 20.'
          required: false
          schema:
            type: integer
        - in: query
          name: search
          description: Ricerca profili dei cantieri per nome, indirizzo o altre caratteristiche.
          required: false
          schema:
            type: string

      responses:
        '200':
          description: Elenco dei profili dei cantieri restituito con successo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 100
                  next:
                    type: string
                    nullable: true
                    example: 'https://be.falone.madstudio.it/api/worksitesprofile?page=2'
                  previous:
                    type: string
                    nullable: true
                    example: null
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Boards'
        '400':
          description: Parametro di query non valido o mancante
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Parametro di query non valido o mancante."
      security:
        - bearerAuth: []
components:
  schemas:
    Apartments:
      type: object
      properties:
        floor:
          type: string
          nullable: true
        link:
          type: string
          maxLength: 100
          nullable: true
        note:
          type: string
          maxLength: 100
          nullable: true
        owner:
          type: string
          maxLength: 100
          nullable: true
        owner_cf:
          type: string
          maxLength: 100
          nullable: true
        owner_email:
          type: string
          format: email
          nullable: true
        owner_phone:
          type: string
          maxLength: 100
          nullable: true
        worksite_id:
          type: integer
          format: int64
          nullable: true
    BoardAttachments:
      type: object
      properties:
        attachment_link:
          type: string
        board_id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - DOCUMENT
            - IMAGE
    BoardRead:
      type: object
      properties:
        board_id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        profile_id:
          type: integer
          format: int64
    Boards:
      type: object
      properties:
        author:
          type: string
          maxLength: 150
        body:
          type: string
        date:
          type: string
          format: date-time
        date_update:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        image:
          type: string
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/Recipients'
        title:
          type: string
          maxLength: 250
        type:
          type: string
          enum:
            - MESSAGE
            - UPDATE
    Categories:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
          example: "Abitazione"
    CheckList:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 100
    CheckListWorksites:
      type: object
      properties:
        checklist_id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        is_done:
          type: boolean
        order:
          type: integer
        worksites_id:
          type: integer
          format: int64
    ClientApartments:
      type: object
      properties:
        apartment:
          $ref: '#/components/schemas/Apartments'
        id:
          type: integer
          format: int64
        is_active:
          type: boolean
        profile:
          $ref: '#/components/schemas/Profile'
    CollabWorksites:
      type: object
      properties:
        id:
          type: integer
        order:
          type: integer
        profile:
          $ref: '#/components/schemas/Profile'
        role:
          type: string
        worksite:
          type: integer
    Contractor:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 150
    Financier:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 150
    Profile:
      type: object
      properties:
        date:
          type: string
          format: date-time
        date_update:
          type: string
          format: date-time
        email:
          type: string
          maxLength: 100
        first_name:
          type: string
          maxLength: 100
        id:
          type: integer
          format: int64
        image:
          type: string
        is_active:
          type: boolean
        last_name:
          type: string
          maxLength: 100
        mobile_number:
          type: string
          maxLength: 100
        token:
          type: string
          maxLength: 150
        type:
          type: string
          enum:
            - USER
            - TECNICI
            - STAFF
        user_id:
          type: integer
          format: int64
    Recipients:
      type: object
      properties:
        apartment_id:
          type: integer
          format: int64
        board_id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        profile_id:
          type: integer
          format: int64
        recipient_type:
          type: string
          enum:
            - WORKSITE
            - APARTMENT
            - PROFILE
        worksite_id:
          type: integer
          format: int64
    Worksites:
      type: object
      properties:
        address:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Categories'
        collaborations:
          type: array
          items:
            $ref: '#/components/schemas/CollabWorksites'
        contractor:
          $ref: '#/components/schemas/Contractor'
        date:
          type: string
          format: date-time
        date_update:
          type: string
          format: date-time
        financier:
          $ref: '#/components/schemas/Financier'
        id:
          type: integer
        image:
          type: string
        is_open:
          type: boolean
        lat:
          type: number
          format: "decimal(10,6)"
        lon:
          type: number
          format: "decimal(10,6)"
        name:
          type: string
        net_worth:
          type: number
          format: float
        link:
          type: string
    WorksitesNoImage:
      type: object
      properties:
        image:
          type: string
          format: binary
        address:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Categories'
        collaborations:
          type: array
          items:
            $ref: '#/components/schemas/CollabWorksites'
        contractor:
          $ref: '#/components/schemas/Contractor'
        date:
          type: string
          format: date-time
        date_update:
          type: string
          format: date-time
        financier:
          $ref: '#/components/schemas/Financier'
        id:
          type: integer
        is_open:
          type: boolean
        lat:
          type: number
          format: "decimal(10,6)"
        lon:
          type: number
          format: "decimal(10,6)"
        name:
          type: string
        net_worth:
          type: number
          format: float
        link:
          type: string
    WorksitesCategories:
      type: object
      properties:
        categories:
            type: array
            items:
              $ref: '#/components/schemas/Categories'
    WorksitesProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        profile:
          $ref: '#/components/schemas/Profile'
        role:
          type: string
          enum:
            - USER
            - TECNICI
            - STAFF
        worksite:
          type: integer
          format: int64
          example: 56
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
